# below is the code that works in an interactive polymake version 4.0.

use application 'polytope';

$f0 = new Vector<Rational>([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
$f1 = new Vector<Rational>([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
$f2 = new Vector<Rational>([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
$f3 = new Vector<Rational>([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
$f4 = new Vector<Rational>([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
$f012 = new Vector<Rational>([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
$f013 = new Vector<Rational>([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
$f023 = new Vector<Rational>([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]);
$f123 = new Vector<Rational>([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]);
$f014 = new Vector<Rational>([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]);
$f024 = new Vector<Rational>([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]);
$f124 = new Vector<Rational>([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]);
$f034 = new Vector<Rational>([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]);
$f134 = new Vector<Rational>([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]);
$f234 = new Vector<Rational>([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]);
$f01234 = new Vector<Rational>([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]);

$w0 = - $f0 - $f1 - $f2 - $f012 ;
$w1 = $f4;
$w2 = $f3 + $f4;
$w3 = $f4 + $f012;
$w4 = $f4 - $f0 - $f1 - $f2 - $f012 ;
$w5 = $f4 + $f012 + $f014;
$w6 = $f4 + $f014 - $f0 - $f1 - $f2 - $f012 ;
$w7 = $f4 + $f013 - $f0 - $f1 - $f2 - $f012 ;
$w8 = $f3 + $f4 + $f012;
$w9 = $f3 + $f4 - $f0 - $f1 - $f2 - $f012 ;
$w10 = $f4 + $f023 + $f123 + $f014; 
$w11 = $f3 + $f4 + $f013 + $f014;
$w12 = $f3 + $f4 + $f012 + $f2 + $f3 + $f4 + $f234;
$w13 = $f3 + $f4 + $f012 + $f013;
$w14 = $f3 + $f4 + $f013 - $f0 - $f1 - $f2 - $f012 ;
$w15 = $f4 + $f023 + $f123 + $f014 - $f0 - $f1 - $f2 - $f012 ;
$w16 = $f3 + $f4 + $f012 + $f023 + $f014;
$w17 = $f3 + $f4 + $f012 + $f013 + $f2 + $f3 + $f4 + $f234;
$w18 = $f3 + $f4 + $f013 + $f014 - $f0 - $f1 - $f2 - $f012 ;

$p = new Polytope(POINTS => [[1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1]]);


$msd0= new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w0);
$msd1 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w1);
$msd2 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w2);
$msd3 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w3);
$msd4 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w4);
$msd5 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w5);
$msd6 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w6);
$msd7 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w7);
$msd8 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w8);
$msd9 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w9);
$msd10 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w10);
$msd11 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w11);
$msd12 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w12);
$msd13 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w13);
$msd14 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w14);
$msd15 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w15);
$msd16 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w16);
$msd17 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w17);
$msd18 = new fan::SubdivisionOfPoints(POINTS=>$p->VERTICES, WEIGHTS => $w18);


# To find the maximal cells and dual graph of $msdi
# print $msdi -> MAXIMAL_CELLS;
# print $msdi -> POLYHEDRAL_COMPLEX -> DUAL_GRAPH -> EDGES;


